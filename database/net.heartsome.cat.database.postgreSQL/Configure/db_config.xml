<?xml version="1.0" encoding="UTF-8"?>
<dbtype>
	<!-- 参数配置 -->
	<driver>org.postgresql.Driver</driver>
	<url>jdbc:postgresql://__SERVER_NAME__:__PORT_NUMBER__/__DATABASE_NAME__</url>
	<default>
		<property name="server">localhost</property>
		<property name="type">PostgreSQL</property>
		<property name="port">5432</property>
	</default>
	<config-property>
		<property name="user">__USER__</property>
		<property name="password">__PASSWORD__</property>
		<property name="charSet">UTF-8</property>
	</config-property>	
	<create-database>CREATE DATABASE __DATABASE_NAME__</create-database>
	<drop-database>DROP DATABASE __DATABASE_NAME__</drop-database>	
	
	<!-- 系统库匹配 -->
	<create-hssystables>
		<step>
			CREATE TABLE HSCATSYSDB
			(
			   DBNAME               varchar(150) not null,
			   QUALITY              char(1) not null,
			   USERS                text,
			   TYPE				    int not null,
			   primary key (DBNAME)
			)
		</step>
	</create-hssystables>
	<insert-db>INSERT INTO HSCATSYSDB (DBNAME,QUALITY,TYPE) VALUES (?,?,?)</insert-db>
	<remove-db>DELETE FROM HSCATSYSDB WHERE DBNAME=?</remove-db>
	<get-dblist>SELECT DBNAME, QUALITY, USERS FROM HSCATSYSDB WHERE TYPE=?</get-dblist>
	
	<!-- 记忆库／术语库表结构匹配 -->
	<create-tables>
		<!-- 创建TMX部分相关的表 -->
		<step>
		CREATE TABLE MHEADER
		(
			MHPKID               serial,
			CREATIONTOOL         varchar(200),
			CTVERSION            varchar(200),
			TMF                  varchar(255),
			SRCLANG              varchar(6),
			ADMINLANG            varchar(6),
			DATATYPE             varchar(10),
			SEGTYPE              varchar(10),
			CREATIONID           varchar(40),
			CREATIONDATE         varchar(28),
			CHANGEID             varchar(40),
			CHANGEDATE           varchar(28),
			ENCODING             varchar(15),
			primary key (MHPKID)
		)
		</step>
		<step>
		CREATE TABLE MHEADERNODE
		(
			MHNPKID              serial,
			MHPKID               int not null,
			NNAME                varchar(100) not null,
			NTYPE                char(1) not null,
			CONTENT              text not null,
			primary key (MHNPKID)
		)
		</step>
		<step>
		create table MTU
		(
		   MTUPKID              serial,
		   MHPKID               int not null,
		   TUID                 varchar(100),
		   CREATIONID           varchar(40),
		   CREATIONDATE         timestamp,
		   CHANGEID             varchar(40),
		   CHANGEDATE           timestamp,
		   CREATIONTOOL         varchar(200),
		   CTVERSION            varchar(200),
		   CLIENT               varchar(255),
		   PROJECTREF           varchar(255),
		   JOBREF               varchar(255),
		   primary key (MTUPKID)
		)
		</step>
		<step>
		CREATE TABLE LANG
		(
		   LANGCODE             varchar(6) not null,
		   primary key (LANGCODE)
		)
		</step>
		<step>
		CREATE TABLE MPROP
		(
		   MPPKID               serial,
		   PARENTNAME           varchar(30) not null,
		   PARENTID             int not null,
		   PNAME                varchar(100) not null,
		   LANG                 varchar(6),
		   ENCODING             varchar(15),
		   CONTENT              text not null,
		   primary key (MPPKID)		  
		)
		</step>
		<step>
		CREATE TABLE MEXTRA
		(
		   MEPKID               serial,
		   PARENTNAME           varchar(30) not null,
		   PARENTID             int not null,
		   NTYPE                char(1) not null,
		   NNAME                varchar(100) not null,
		   CONTENT              text not null,
		   primary key (MEPKID)
		)
		</step>
		<step>
		CREATE TABLE MNOTE
		(
		   MNPKID               serial,
		   PARENTNAME           varchar(30) not null,
		   PARENTID             int not null,
		   CONTENT              text not null,
		   CREATIONID           varchar(40),
		   CREATIONDATE         varchar(28),
		   CHANGEID             varchar(40),
		   CHANGEDATE           varchar(28),
		   ENCODING             varchar(15),
		   LANG                 varchar(6),
		   primary key (MNPKID)
		)
		</step>
		<step>
		CREATE TABLE TEXTDATA
		(
		   TPKID                serial,
		   TYPE                 char(1) not null,
		   GROUPID              int not null,
		   HASH                 int not null,
		   PURE                 text not null,
		   CONTENT              text not null,
		   LANG                 varchar(6) not null,
		   PRECONTEXT           varchar(100),
		   NEXTCONTEXT          varchar(100),
		   primary key (TPKID)
		)
		</step>
		<!-- 创建TMX相关表结束 -->
		
		<!-- 创建TBX相关表 存储TBX共用TEXTDATA表，参考E-R模型-->
		<step>
		create table BATTRIBUTE
		(
			BAPKID               serial,
			BMTHPKID             int not null,
			ANAME                varchar(100) not null,
			AVALUE               varchar(255) not null,
			PARENTNAME           varchar(100) not null,
			primary key (BAPKID)
		)
		</step>
		<step>
		create table BMARTIFHEADER
		(
			BMTHPKID             serial,
			HID                  varchar(100),
			CONTENT              text not null,
			primary key (BMTHPKID)
		)
		</step>
		<step>
		create table BREFOBJECTLIST
		(
		   BROLPKID             serial,
		   BMTHPKID             int not null,
		   ROLID                varchar(100),
		   CONTENT              text not null,
		   primary key (BROLPKID)
		)
		</step>
		<step>
		create table BTERMENTRY
		(
		   BTEPKID              serial,
		   BMTHPKID             int not null,
		   CID                  varchar(100),
		   CONTENT              text not null,
		   primary key (BTEPKID)
		)
		</step>
		<step>
		create table BNODE
		(
		   NPKID                serial,
		   PARENTPKID           int not null,
		   PARENTNAME           varchar(100) not null,
		   NTYPE                char not null,
		   NNAME                varchar(100) not null,
		   NID                  varchar(100),
		   CONTENT              text not null,
		   primary key (NPKID)
		)
		</step>	
	</create-tables>
	
	<!-- 创建索引 -->
	<create-index>
		<step>CREATE INDEX IDX_TEXTDATA_GROUPID ON TEXTDATA (GROUPID)</step>
		<step>CREATE INDEX IDX_TEXTDATA_HASH ON TEXTDATA (HASH)</step>
		<step>CREATE INDEX IDX_MPROP_PARENTID ON MPROP (PARENTID)</step>
		<step>CREATE INDEX IDX_MEXTRA_PARENTID ON MEXTRA (PARENTID)</step>
		<step>CREATE INDEX IDX_MNOTE_PARENTID ON MNOTE (PARENTID)</step>
	</create-index>
	
	<!-- Matrix_Lang表相关SQL	 -->
	<matrix-operation>
		<create-table>
			<step>
			create table MATRIX___LANG__
				(
				   MPKID                serial,
				   TPKID                int not null,
				   NGRAM                int not null,
				   SEGSIZE              smallint not null,
				   primary key (MPKID)
				)
			</step>
		</create-table>
		
		<create-index>
			<step>CREATE INDEX IDX___LANG___NGRAM_SEGSIZE ON MATRIX___LANG__ (NGRAM,SEGSIZE)</step>
		</create-index>	
			
		<insert>
			INSERT INTO MATRIX___LANG__
			(TPKID,NGRAM,SEGSIZE)
			VALUES (?,?,?)
		</insert>
		<delete>
			DELETE FROM MATRIX___LANG__
			WHERE __WHERE__
		</delete>
		<search>
			SELECT TPKID FROM MATRIX___LANG__ 
			WHERE  SEGSIZE &gt;=? AND SEGSIZE &lt;=? AND NGRAM IN (__SET__)
		</search>
		<search-1>
			SELECT 
			    TPKID
			  FROM
			    MATRIX_ENUS 
			  WHERE SEGSIZE &gt;=? AND SEGSIZE &lt;=? AND NGRAM IN (__SET__)
			  GROUP BY TPKID HAVING COUNT(TPKID) BETWEEN ? AND ?
		</search-1>
	</matrix-operation>
	
	<!-- 操作数据库相关SQL -->
	<operate-db>
		<getTMMatch1>
			SELECT B.GROUPID, LANG, PURE, CONTENT, PRECONTEXT,NEXTCONTEXT, TUID, CREATIONID, CREATIONDATE, 
				CHANGEID, CHANGEDATE, PROJECTREF, JOBREF, CLIENT 
			FROM 	
				(SELECT GROUPID FROM TEXTDATA WHERE TPKID IN (__SET__)) A	
			LEFT JOIN TEXTDATA B ON A.GROUPID = B.GROUPID 
			LEFT JOIN MTU C ON C.MTUPKID=A.GROUPID 
			WHERE B.TYPE='M' AND B.LANG=? OR B.LANG=? 
		</getTMMatch1>
		<!--<search-Corcondance>
		 相关搜索 
		SELECT  * FROM (SELECT C.MTUPKID TUID,C.CLIENT,C.PROJECTREF,C.JOBREF,C.CREATIONID,C.CREATIONDATE, C.CHANGEID, C.CHANGEDATE,D.MPPKID,B.LANG,__IGNORE_MARK__ 
FROM (SELECT GROUPID FROM TEXTDATA WHERE TYPE = 'M' __CONDITION__) A 
LEFT JOIN TEXTDATA B ON A.GROUPID = B.GROUPID AND B.TYPE='M' __LANGUAGE_LIST__
LEFT JOIN MTU C ON A.GROUPID = C.MTUPKID 
LEFT JOIN MPROP D ON A.GROUPID = D.PARENTID AND D.PARENTNAME = 'TU' AND D.PNAME = 'x-flag' AND D.CONTENT = 'HS-Flag' 
ORDER BY C.CHANGEDATE DESC,B.GROUPID) B LIMIT __MAX__
		</search-Corcondance>-->		
		<getTerm>
			SELECT A.TPKID, A.PURE, B.PURE, C.CONTENT FROM TEXTDATA A 
				LEFT JOIN TEXTDATA B ON A.GROUPID=B.GROUPID  AND B.LANG=? AND B.TYPE='B' 
				LEFT JOIN BNODE C ON A.GROUPID = C.PARENTPKID AND C.PARENTNAME = 'termEntry' 
				AND C.NTYPE = 'E' AND C.NNAME = 'note' AND (C.NID = ? OR C.NID = ?)
					WHERE A.TYPE='B' AND  A.LANG=? AND POSITION(LOWER(A.PURE) IN ?) &gt; 0 AND B.PURE IS NOT NULL
		</getTerm>
	</operate-db>
</dbtype>