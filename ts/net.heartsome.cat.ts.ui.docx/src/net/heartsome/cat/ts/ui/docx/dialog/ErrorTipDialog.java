package net.heartsome.cat.ts.ui.docx.dialog;import net.heartsome.cat.ts.ui.composite.DialogLogoCmp;import net.heartsome.cat.ts.ui.docx.Activator;import net.heartsome.cat.ts.ui.docx.resource.Messages;import org.eclipse.jface.dialogs.Dialog;import org.eclipse.jface.dialogs.IDialogConstants;import org.eclipse.jface.layout.GridDataFactory;import org.eclipse.jface.layout.GridLayoutFactory;import org.eclipse.swt.SWT;import org.eclipse.swt.graphics.Image;import org.eclipse.swt.layout.GridData;import org.eclipse.swt.widgets.Button;import org.eclipse.swt.widgets.Composite;import org.eclipse.swt.widgets.Control;import org.eclipse.swt.widgets.Shell;import org.eclipse.swt.widgets.Text;public class ErrorTipDialog extends Dialog{	private Image logoImage;	private String errorTip;		public ErrorTipDialog(Shell parentShell, String errorTip) {		super(parentShell);		this.errorTip = errorTip;		logoImage =  Activator.getImageDescriptor("images/error_log.png").createImage();	}		@Override	protected void configureShell(Shell newShell) {		super.configureShell(newShell);		newShell.setText(Messages.getString("ErrorTipDialog.dialog.title"));	}	@Override	protected boolean isResizable() {		return true;	}			@Override	protected void createButtonsForButtonBar(Composite parent) {		super.createButtonsForButtonBar(parent);		Button okBtn = getButton(IDialogConstants.OK_ID);		okBtn.setText(Messages.getString("all.dialog.okBtn"));		Button cancelBtn = getButton(IDialogConstants.CANCEL_ID);		cancelBtn.setText(Messages.getString("all.dialog.cancelBtn"));	}	@Override	protected Control createDialogArea(Composite parent) {		Composite tparent = (Composite) super.createDialogArea(parent);		GridData parentData = new GridData(SWT.FILL, SWT.FILL, true, true);		parentData.widthHint = 600;		parentData.heightHint = 300;		tparent.setLayoutData(parentData);		GridLayoutFactory.fillDefaults().extendedMargins(-1, -1, -1, 8).numColumns(1).applyTo(tparent);		createLogoArea(tparent);		createTipsTextGroup(tparent);				return tparent;	}		/**	 * 显示图片区	 * @param parent	 */	public void createLogoArea(Composite parent) {		new DialogLogoCmp(parent, SWT.NONE, Messages.getString("ErrorTipDialog.title"), Messages.getString("ErrorTipDialog.messages"), logoImage);	}		private void createTipsTextGroup(Composite parent){		Composite parentCmp = new Composite(parent, SWT.NONE);		GridLayoutFactory.fillDefaults().extendedMargins(9, 9, 0, 0).numColumns(1).applyTo(parentCmp);		GridDataFactory.fillDefaults().grab(true, true).applyTo(parentCmp);				Text text = new Text(parentCmp, SWT.BORDER | SWT.MULTI | SWT.WRAP | SWT.V_SCROLL);		GridDataFactory.fillDefaults().grab(true, true).applyTo(text);		text.setText(errorTip);	}		@Override	public boolean close() {		if(logoImage != null && !logoImage.isDisposed()){			logoImage.dispose();		}		return super.close();	}}